from quantgen import *

bowman_lex = {
       ('some', 'some'):   EQ,
       ('no', 'some'):    NEG,
       ('all', 'some'):   FOR,
       ('not_all', 'some'):   COV,
       ('most', 'some'):   FOR,
       ('not_most', 'some'):   COV,
       ('two', 'some'):   FOR,
       ('lt_two', 'some'):   COV,
       ('three', 'some'):   FOR,
       ('lt_three', 'some'):   COV,

       ('some', 'no'):   NEG,
       ('no', 'no'):    EQ,
       ('all', 'no'):   ALT,
       ('not_all', 'no'):   REV,
       ('most', 'no'):   ALT,
       ('not_most', 'no'):   REV,
       ('two', 'no'):   ALT,
       ('lt_two', 'no'):   REV,
       ('three', 'no'):   ALT,
       ('lt_three', 'no'):   REV,

       ('some', 'all'):   REV,
       ('no', 'all'):    ALT,
       ('all', 'all'):   EQ,
       ('not_all', 'all'):   NEG,
       ('most', 'all'):   REV,
       ('not_most', 'all'):   ALT,
       ('two', 'all'):   INDY,
       ('lt_two', 'all'):   INDY,
       ('three', 'all'):   INDY,
       ('lt_three', 'all'):   INDY,

       ('some', 'not_all'):   COV,
       ('no', 'not_all'):    FOR,
       ('all', 'not_all'):   NEG,
       ('not_all', 'not_all'):   EQ,
       ('most', 'not_all'):   COV,
       ('not_most', 'not_all'):   FOR,
       ('two', 'not_all'):   INDY,
       ('lt_two', 'not_all'):   INDY,
       ('three', 'not_all'):   INDY,
       ('lt_three', 'not_all'):   INDY,

       ('some', 'most'):   REV,
       ('no', 'most'):    ALT,
       ('all', 'most'):   FOR,
       ('not_all', 'most'):   COV,
       ('most', 'most'):   EQ,
       ('not_most', 'most'):   NEG,
       ('two', 'most'):   INDY,
       ('lt_two', 'most'):   INDY,
       ('three', 'most'):   INDY,
       ('lt_three', 'most'):   INDY,

       ('some', 'not_most'):   COV,
       ('no', 'not_most'):    FOR,
       ('all', 'not_most'):   ALT,
       ('not_all', 'not_most'):   REV,
       ('most', 'not_most'):   NEG,
       ('not_most', 'not_most'):   EQ,
       ('two', 'not_most'):   INDY,
       ('lt_two', 'not_most'):   INDY,
       ('three', 'not_most'):   INDY,
       ('lt_three', 'not_most'):   INDY,

       ('some', 'two'):   REV,
       ('no', 'two'):    ALT,
       ('all', 'two'):   INDY,
       ('not_all', 'two'):   INDY,
       ('most', 'two'):   INDY,
       ('not_most', 'two'):   INDY,
       ('two', 'two'):   EQ,
       ('lt_two', 'two'):   NEG,
       ('three', 'two'):   FOR,
       ('lt_three', 'two'):   COV,

       ('some', 'lt_two'):   COV,
       ('no', 'lt_two'):    FOR,
       ('all', 'lt_two'):   INDY,
       ('not_all', 'lt_two'):   INDY,
       ('most', 'lt_two'):   INDY,
       ('not_most', 'lt_two'):   INDY,
       ('two', 'lt_two'):   NEG,
       ('lt_two', 'lt_two'):   EQ,
       ('three', 'lt_two'):   ALT,
       ('lt_three', 'lt_two'):   REV,

       ('some', 'three'):   REV,
       ('no', 'three'):    ALT,
       ('all', 'three'):   INDY,
       ('not_all', 'three'):   INDY,
       ('most', 'three'):   INDY,
       ('not_most', 'three'):   INDY,
       ('two', 'three'):   REV,
       ('lt_two', 'three'):   ALT,
       ('three', 'three'):   EQ,
       ('lt_three', 'three'):   NEG,

       ('some', 'lt_three'):   COV,
       ('no', 'lt_three'):    FOR,
       ('all', 'lt_three'):   INDY,
       ('not_all', 'lt_three'):   INDY,
       ('most', 'lt_three'):   INDY,
       ('not_most', 'lt_three'):   INDY,
       ('two', 'lt_three'):   COV,
       ('lt_two', 'lt_three'):   FOR,
       ('three', 'lt_three'):   NEG,
       ('lt_three', 'lt_three'):   EQ,
}


for key, val in bowman_lex.items():
    if lexicon[key] != val:
        print key, val, lexicon[key]   
