### Sample problems for natural logic in CVSS

### Key:
### = - equivalence
### | - incompatibility
### < - entailment 
### > - reverse entailment
### ^ - negation
### v - cover
### # - compatibility

### All constituents of more than two words get unlabeled binary parse trees, 
### marked with parens.

### I assume ( provisionally? ) that all properties have non-zero extension.
### Assuming this for dog allows for reasoning patterns like:
### ^	( all dog ) bark	( some dog ) ( not bark )

###### NEGATION ######

### Applying negation
|	dog	not dog
|	able	not able

###### BASIC QUANTIFICATION AND NEGATION ######

### Quantifiers: some/all
<	some dog	all dog

### Quantifiers: some/no
^	some dog	no dog

### Quantifiers: all/no
|	all dog	no dog

### Negated Quantifiers: some/not all
#	some dog	not ( all dog )

### Negated Quantifiers: all/not all
^	all dog	not ( all dog )

### Negated quantifiers: some/not some
^	some dog	not ( some dog )

### Negated quantifiers: all/not some
|	all dog	not ( some dog )

### Negated quantifiers: all/not no
<	all dog	not ( no dog )

### Negated quantifiers: some/not no
=	some dog	not ( no dog )

### Negation under quantification: all/some not
^	( all dog ) bark	( some dog ) ( not bark )

### Negation under quantification: some/all not
( some dog ) bark	( all dog ) ( not bark )

### Negation under quantification: some/some not
# ( some dog ) bark	( some dog ) ( not bark )

### Negation under quantification: all/all not
| ( all dog ) bark	( all dog ) ( not bark )

### Negation under quantification: no/no not
| ( no dog ) bark	( no dog ) ( not bark )

### Negation under quantification: some/no not
> ( Some dog ) bark	( no dog ) ( not bark )

### Negation under quantification: all/no not
= ( all dog ) bark	( no dog ) ( not bark )

###### NON-BASIC QUANTIFICATION ######

### Quasntifiers: some/most
>	some dog	most dog

### Quantifiers: all/most
<	all dog	most dog

### Quantifiers: no/most
|	no dog	most dog

### Quasntifiers: some/two
>	some dog	two dog

### Quantifiers: all/two
<	all dog	two dog

### Quantifiers: no/two
|	no dog	two dog

### Quantifiers: most/two
<	most dog	two dog

### Quasntifiers: some/three
>	some dog	three dog

### Quantifiers: all/three
<	all dog	three dog

### Quantifiers: no/three
|	no dog	three dog

### Quantifiers: most/three
#	most dog	three dog

### Quantifiers: two/three
>	two dog	three dog

###### INSERTION OF MODIFIERS ######

### Insertion of intersective modifier
>	crow	Asian crow

### Insertion of nonintersective: fake/former
|	crow	fake crow
|	puppy	former puppy

### Insertion of nonintersective: alleged
#	puppy	alleged puppy

### Insertion of nonintersective: hesitate to
v	bark	hesitate bark
|	not bark	not ( hesitate bark )

###### MISC ######

### Substitution of unrelated
# hungry dog	Thai dog

### Intersective modifiers under quantifiers
<	all animal	some dog
|	no animal	some dog
v	some animal	no dog
#	some animal	some dog

### Transitivity
## Train on:
<	some puppy	some dog
<	some dog	some animal
## Test on:
<	some puppy	some animal

### DeMorgan's laws [if we want to try to teach it conjunction]
=	not ( cat ( and dog ) )	( not cat ) ( or ( not dog ) )
=	not ( cat ( or dog ) )	( not cat ) ( and ( not dog ) )

###### ADD TO WORD PAIR TRAINING DATA ( work in progress ) ######
<	some	all
=	all	all
=	some	some
>	all	some
<	most	some
>	most	all
...
=	bark	bark
#	bark	...
